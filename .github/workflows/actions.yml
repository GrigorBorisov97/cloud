name: React Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  react_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Stop all containers
        run: docker-compose down

      - name: Build React Container
        run: docker-compose up -d --build

      - name: Wait containers
        run: sleep 30s

      - name: Set Laravel Env Key
        run: |
          echo "APP_KEY=base64:$(openssl rand -base64 32)" > .env
          docker cp .env cloud-laravel:/app
      
      - name: Generate Laravel key
        run: docker exec cloud-laravel php artisan key:generate

      - name: Test React
        run: docker exec cloud-react npm run test

      - name: Test Laravel
        run: docker exec cloud-laravel php artisan test

      # - name: Update Kubernetes Deployment
      #   run: |
      #     kubectl set image deployment/your_deployment_name your_container_name=your_image_tag

  publish:
      name: publish image
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v3
      - name: Login
        run: |
          echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and Publish
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  deploy:
    needs: publish
    name: deploy image
    runs-on: ubuntu-latest

    steps:
    - name: install ssh keys
      # check this thread to understand why its needed:
      # <https://stackoverflow.com/a/70447517>
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
    - name: connect and pull
      run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"
    - name: cleanup
      run: rm -rf ~/.ssh
